##########################################################################################################################################################
# START OF CONFIGURATION FILE
##########################################################################################################################################################
# This is a sample application configuration file that can be used by various modules in the sasci360veloxpy package.
# This configuration file is used to set up logging for the application.
# The configuration is in the INI file format.
# It is recommended to use this file to configure the logging settings for your application. 
# The configuration file should be placed in the same directory as the application or in a directory that is accessible to the application.
# The configuration file is read by application when it starts, and the logging settings can be passed to 
# any class in the sasci360veloxpy library that requires it as INI file name or as 'configparser.ConfigParser' python object. 
# These  settings can be changed by modifying this file and restarting the application.
# If no application specific configuration file is provided, the file 'sasci360veloxpy.ini' 
# will be used as default configuration file.


#---------------------------------------------------------------------------------------------------------------------------------------------------------
# Start of App Configuration Section
#---------------------------------------------------------------------------------------------------------------------------------------------------------

[tenant]
extapigateway_url=extapigwservice-<your url>
client_id=<your tenant Id>
client_secret=<your tenant secret>
protocol=https://
api_user_name=<your api user name>
api_user_password=<your api user password>

#---------------------------------------------------------------------------------------------------------------------------------------------------------
# End of App configuration section
#---------------------------------------------------------------------------------------------------------------------------------------------------------


#---------------------------------------------------------------------------------------------------------------------------------------------------------
# Start of Logging Configuration Section
#---------------------------------------------------------------------------------------------------------------------------------------------------------

# 'Logging_Configurations' section contains the configuration for logging as required by SASVeloxPyLogging module.
[Logging_Configurations]

# 'loggername' is the name of the logger that will be used to log messages.
# It is a unique identifier for the logger and is used to differentiate log messages from different applications or modules.
# It is recommended to use a unique name for each application or module.
loggername=SASCI360VeloxPy

# Turn loggin to console on or off - permissible values are : Yes, No
logtoconsole=Yes

# 'loftofile' is used to turn logging to file on or off.
# If set to Yes, the logs will be written to a file specified in 'logfilelocation'.
# permissible values are : Yes, No
logtofile=Yes

# 'logfilelocation' is the location of the log file where the logs will be written.
# This is used only if logtofile is set to Yes.
# Note: The path should be a valid path on the system where the application is running.
# It is recommended to use a directory that is accessible to the application and has write permissions.
# Example: C:\\Temp\\ or /var/logs/ or /tmp/
# Note: The path should not end with a backslash or forward slash.
logfilelocation=C:\\Temp

# 'logfilename' is the name of the log file that will be created.
# It can include variables like {LOGGERNAME}, {PID}, {TIMESTAMP}, {THREADID} and {RUNID} 
# to create a unique log file name.
# Note: all the variable names should be in upper case: 
# - {LOGGERNAME} will be replaced with the value of 'loggername' value defined in this section
# - {PID} will be replaced with the process ID of the application
# - {THREADID} will be replaced with the thread ID of the application
# - {TIMESTAMP} will be replaced with the current timestamp in the format defined by 'logdateformat' in this section
# - {RUNID} will be replaced with a random ID to ensure uniqueness of the log file name 
# The {THREADID} variable is used to differentiate log messages from different threads in the application.
# It is useful when the application is multi-threaded and you want to capture logs from different threads separately.
# The log file name can include any combination of these variables to create a unique log file name
# Example: for the logfilename value "Prefix_{loggername}_P{PID}_TH{THREADID}_DTTM{TIMESTAMP}_R{RUNID}_Suffix.log"
# If loggername is 'SASCI360VeloxPy', PID is '1234', TIMESTAMP is '10/01/2023 12:00:00 PM', THREADID is '5678' and RANDOMID is 'abcd1234',
# the log file name will be 'Prefix_SASCI360VeloxPy_PID1234_TH28643_DTTM20230101120000_RUN5678_Suffix.log'.
# Note: The log file name can be customized by changing the 'logfilename' value.    
logfilename = Prefix_{LOGGERNAME}_PID{PID}_TH{THREADID}_DTTM{TIMESTAMP}_RUN{RUNID}_Suffix.log

# 'loglevel' is the level of logging that will be captured in the log file and / or console.
# permissible values are : DEBUG, INFO, WARNING, ERROR, CRITICAL
# 'DEBUG' captures all log lines, 'INFO' captures informational messages, 'WARNING' captures warnings, 'ERROR' captures error messages, and 'CRITICAL' captures critical errors.
# Setting 'loglevel=DEBUG' will generate a lot of log lines, so it is recommended to use it only during development or troubleshooting.
# For production use, it is recommended to set it to 'INFO' or 'WARNING'.
loglevel=INFO

# 'logdateformat' is the format of the date and time that will be used in the log lines.
# This is used to format the date-time stamp for each of the log lines.
# The format can include various components like year, month, day, hour, minute, second, AM/PM, etc.
# Example: %m/%d/%Y %I:%M:%S %p will produce a timestamp like '10/01/2023 12:00:00 PM'.
# The format can be customized as per the requirements.
# Valid Values are 
# %Y - Year with century as a decimal number.
# %y - Year without century as a zero-padded decimal number.
# %m - Month as a zero-padded decimal number.
# %d - Day of the month as a zero-padded decimal number.    
# %b - Month as abbreviated name.
# %H - Hour (24-hour clock) as a zero-padded decimal number.
# %I - Hour (12-hour clock) as a zero-padded decimal number.
# %p - AM or PM.    
# %M - Minute as a zero-padded decimal number.
# %S - Second as a zero-padded decimal number.
# %a - Weekday as abbreviated name.
# %j - Day of the year as a zero-padded decimal number.
# Format with all valid formatting characterts is:
# logdateformat = %Y%y%m%d%b%H%I%p%M%S%a%j
logdateformat=  %m/%d/%Y %I:%M:%S %p


# 'loglineformat' is the format of the log lines that will be written to the log file and / or console.
# It defines how the log lines will be structured.
# Variables that can be used : %(asctime)s , %(process)d , %(thread)d, %(module)s , %(name)s , %(funcName)s , %(lineno)d , %(levelname)s , %(message)s
# Log line format example: %(asctime)s | %(name)s | %(levelname)s | %(message)s
loglineformat=%(asctime)s | %(name)s | %(levelname)s | %(message)s

# Setting 'developermode=Yes' prints additional log lines irrespective of 'loglevel' you set above
# Useful only for developers for troubleshooting during development or maintenance of the code
# Recommended to set this to Yes only during development or maintenance of the code
# This is not recommended for production use as it can generate a lot of log lines
developermode=No

#---------------------------------------------------------------------------------------------------------------------------------------------------------
# End of logging configuration section
#---------------------------------------------------------------------------------------------------------------------------------------------------------

##########################################################################################################################################################
# END OF CONFIGURATION FILE
##########################################################################################################################################################